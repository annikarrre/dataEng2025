version: "3.9"

services:
  # --- Airflow metadata database ---
  airflow-db:
    container_name: airflow-db
    image: postgres:16.4
    environment:
      POSTGRES_USER: ${AIRFLOW_DB_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_DB_PASSWORD}
      POSTGRES_DB: ${AIRFLOW_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata_airflow:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AIRFLOW_DB_USER} -d ${AIRFLOW_DB_NAME}"]
      interval: 10s
      retries: 5
    restart: always

  # --- ClickHouse Warehouse ---
  clickhouse:
    image: clickhouse/clickhouse-server:24.8
    container_name: clickhouse
    restart: always
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse_data:/var/lib/clickhouse/
      - ./airflow/datasets:/var/lib/clickhouse/user_files
      - ./clickhouse/sql:/sql
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  # --- Pipeline Postgres for other data ---
  db:
    container_name: db
    image: postgres:16.4
    environment:
      POSTGRES_USER: ${PIPELINE_DB_USER}
      POSTGRES_PASSWORD: ${PIPELINE_DB_PASSWORD}
      POSTGRES_DB: ${PIPELINE_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PIPELINE_DB_USER} -d ${PIPELINE_DB_NAME}"]
      interval: 10s
      retries: 5
    restart: always

  # --- pgAdmin UI for both databases ---
  pgadmin:
    container_name: pgadmin
    image: elestio/pgadmin:REL-8_10
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      CSRF_ENABLED: "False"
    ports:
      - "5050:80"
    depends_on:
      airflow-db:
        condition: service_healthy
      db:
        condition: service_healthy

  # --- Airflow Initialization ---
  airflow-init:
    image: apache/airflow:2.8.1
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init
        airflow users create \
          --username ${AIRFLOW_ADMIN_USER} \
          --password ${AIRFLOW_ADMIN_PASSWORD} \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email ${AIRFLOW_ADMIN_EMAIL}
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    depends_on:
      airflow-db:
        condition: service_healthy
    restart: "no"

  # --- Airflow Webserver ---
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: apache/airflow:2.8.1
    container_name: airflow-webserver
    command: webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
      AIRFLOW_CONN_PIPELINE_DB: ${AIRFLOW_CONN_PIPELINE_DB}
      AIRFLOW_CONN_CLICKHOUSE_HTTP: ${AIRFLOW_CONN_CLICKHOUSE_HTTP}
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./airflow/datasets:/opt/airflow/datasets
      - ./airflow/include:/opt/airflow/include
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      airflow-db:
        condition: service_healthy
      db:
        condition: service_healthy
      clickhouse:
        condition: service_started
    restart: always

  # --- Airflow Scheduler ---
  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: apache/airflow:2.8.1
    container_name: airflow-scheduler
    command: scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
      AIRFLOW_CONN_PIPELINE_DB: ${AIRFLOW_CONN_PIPELINE_DB}
      AIRFLOW_CONN_CLICKHOUSE_HTTP: ${AIRFLOW_CONN_CLICKHOUSE_HTTP}
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./airflow/datasets:/opt/airflow/datasets
      - ./airflow/include:/opt/airflow/include
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      airflow-db:
        condition: service_healthy
      db:
        condition: service_healthy
      clickhouse:
        condition: service_started
    restart: always

volumes:
  pgdata_airflow:
  pgdata: